name: InstantPay CI/CD Pipeline with VPS Deploy

on:
  push:
    branches: ["main"]

env:
  SSH_HOST: ${{ secrets.SSH_HOST }}
  SSH_USER: ${{ secrets.SSH_USER }}
  SSH_PORT: ${{ secrets.SSH_PORT || '22' }}
  DEPLOY_PATH: ${{ secrets.VPS_DEPLOY_PATH }}
  PM2_APP_NAME: ${{ secrets.VPS_PM2_APP_NAME || 'instantpay' }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Cache Bun dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.bun
          node_modules
          packages/*/node_modules
        key: ${{ runner.os }}-bun-${{ hashFiles('bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun-
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
    
    - name: Build project
      run: bun run build
    
    - name: Archive build artifacts
      run: |
        mkdir -p artifact
        cp -r dist artifact/
        cp -r node_modules artifact/ || echo "No node_modules to copy"
        cp bun.lockb package.json artifact/
        ls -la artifact/
    
    - name: Upload artifacts for deploy
      uses: actions/upload-artifact@v4
      with:
        name: build-artifacts
        path: artifact

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: build-artifacts
        path: artifact
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        chmod 700 ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -p $SSH_PORT $SSH_HOST >> ~/.ssh/known_hosts
    
    - name: Upload build to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        source: "artifact/*"
        target: "${{ env.DEPLOY_PATH }}/"
        strip_components: 1
    
    - name: Restart app with PM2
      run: |
        ssh -i ~/.ssh/deploy_key \
            -p $SSH_PORT \
            -o StrictHostKeyChecking=no \
            $SSH_USER@$SSH_HOST "
              cd $DEPLOY_PATH && \
              PATH=\$HOME/.bun/bin:\$PATH pm2 delete $PM2_APP_NAME || true && \
              PATH=\$HOME/.bun/bin:\$PATH pm2 start 'bun run dist/index.js' --name $PM2_APP_NAME && \
              PATH=\$HOME/.bun/bin:\$PATH pm2 save
            "
    
    - name: Verify deployment
      run: |
        sleep 10
        ssh -i ~/.ssh/deploy_key \
            -p $SSH_PORT \
            -o StrictHostKeyChecking=no \
            $SSH_USER@$SSH_HOST "
              PATH=\$HOME/.bun/bin:\$PATH pm2 status && \
              curl -f http://localhost:9999/ping || echo 'Health check may not be available'
            "
    
    - name: Success message
      run: |
        echo "DEPLOYMENT SUCCESSFUL!"
        echo "App is live at: http://$SSH_HOST"
